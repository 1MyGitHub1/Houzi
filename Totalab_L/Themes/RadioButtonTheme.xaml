<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="CircleRadioBtnCmdSty" TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundNormal}"/>
        <Setter Property="FontFamily" Value="{StaticResource FontFamilyNormal}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeNormal}"/>
        <Setter Property="Background" Value="{StaticResource CommonWhiteBrush001}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Cycle"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource NavItemFocusVisualSty}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Content" Value="{x:Null}"/>
        <Setter Property="IsThreeState" Value="False"/>
        <Setter Property="IsChecked" Value="False"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Margin" Value="0"/>
        <!--<Setter Property="MinHeight" Value="32"/>
        <Setter Property="MinWidth" Value="32"/>-->
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="Grid_Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Border_Rest">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource CommonBlackColor}"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.Fill).(Brush.Opacity)" Storyboard.TargetName="Border_Rest">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Border_Rest">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource CommonBlackColor}"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.Fill).(Brush.Opacity)" Storyboard.TargetName="Border_Rest">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.2"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Grid_Root">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.4"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Border_Checked">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <!--<Border>
                            <Grid>
                                <Ellipse x:Name="Border_Rest" StrokeThickness="{TemplateBinding BorderThickness}" 
                                Stroke="{TemplateBinding BorderBrush}" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                                <Ellipse x:Name="Border_Checked" StrokeThickness="6" 
                                Stroke="{TemplateBinding BorderBrush}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                 Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                                 Visibility="Collapsed"/>
                            </Grid>
                        </Border>-->
                        <!--<Ellipse x:Name="Border_Rest" StrokeThickness="{TemplateBinding BorderThickness}" 
                                Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                        <Ellipse x:Name="Border_Checked" StrokeThickness="6" 
                                Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                 Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                                 Visibility="Collapsed"/>-->
                        <Ellipse x:Name="Border_Rest" Fill="{TemplateBinding Background}" 
                                
                                Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                        <Ellipse x:Name="Border_Checked"  Stroke="Black" StrokeThickness="2" Fill="{TemplateBinding Background}"
                                
                                Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                                Visibility="Collapsed"/>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          Margin="{TemplateBinding Padding}">
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Foreground" Value="{Binding Foreground,RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"/>
                                    <Setter Property="FontFamily" Value="{Binding FontFamily,RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"/>
                                    <Setter Property="FontSize" Value="{Binding FontSize,RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"/>
                                    <!--<Setter Property="LineHeight" Value="{StaticResource TextLineHeight}"/>-->
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>