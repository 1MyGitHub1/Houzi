<UserControl 
    x:Class="Totalab_L.SampleListModule"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:sfdatagrid ="http://schemas.syncfusion.com/wpf"
    xmlns:global ="clr-namespace:Totalab_L"
    xmlns:model ="clr-namespace:Totalab_L.Enum"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:ltCtl="clr-namespace:LabTech.UITheme;assembly=LabTech.UITheme"
    xmlns:cal="http://www.caliburnproject.org" 
    xmlns:converter="clr-namespace:Totalab_L.Common"
    mc:Ignorable="d" d:DesignHeight="450" d:DesignWidth="800"
    Loaded="UserControl_Loaded">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Totalab_L;component/Themes/Generic.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="SfDataGridSty" TargetType="{x:Type sfdatagrid:SfDataGrid}">
                <Setter Property="RowDragDropTemplate" Value="{x:Null}"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundNormal}"/>
                <Setter Property="FontFamily" Value="{StaticResource FontFamilyNormal}"/>
                <Setter Property="FontSize" Value="{StaticResource FontSizeSmall}"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="/LabTech.UITheme;component/Images/backgroud/datagrid_cell32_head32.png" Stretch="None" TileMode="Tile" AlignmentX="Left" AlignmentY="Top"
                            ViewportUnits="Absolute" Viewport="0,0,1920,1088"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HeaderRowHeight" Value="{DynamicResource DataGridHeader_Height}"/>
                <Setter Property="RowHeight" Value="{DynamicResource DataGridRow_Height}"/>
                <Setter Property="RowHoverHighlightingBrush" Value="Transparent"/>
                <Setter Property="RowSelectionBrush" Value="Transparent"/>
                <Setter Property="SelectionForegroundBrush" Value="Transparent"/>
                <Setter Property="GroupRowSelectionBrush" Value="Transparent"/>
                <Setter Property="CurrentCellBorderBrush" Value="Transparent"/>
                <Setter Property="CurrentCellBorderThickness" Value="0"/>
                <Setter Property="GridCopyOption" Value="None"/>
                <Setter Property="GridPasteOption" Value="None"/>
                <Setter Property="NavigationMode" Value="Cell"/>
                <Setter Property="SelectionMode" Value="Single"/>
                <Setter Property="SelectionUnit" Value="Cell"/>
                <Setter Property="LiveDataUpdateMode" Value="AllowChildViewUpdate,AllowDataShaping"/>
                <Setter Property="EnableDataVirtualization" Value="True"/>
                <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"/>
                <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
                <Setter Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="True"/>
                <Setter Property="VirtualizingPanel.ScrollUnit" Value="Item"/>
                <Setter Property="ColumnSizer" Value="AutoWithLastColumnFill"/>
                <Setter Property="AlternationCount" Value="2"/>
                <Setter Property="ShowRowHeader" Value="False"/>
                <Setter Property="RowHeaderWidth" Value="30"/>
                <Setter Property="ShowGroupDropArea" Value="False"/>
                <Setter Property="ShowDetailsViewIndentCell" Value="False"/>
                <Setter Property="ShowColumnWhenGrouped" Value="False"/>
                <Setter Property="ShowToolTip" Value="False"/>
                <Setter Property="ShowSortNumbers" Value="False"/>
                <Setter Property="IndentColumnWidth" Value="0"/>
                <Setter Property="ExpanderColumnWidth" Value="0"/>
                <Setter Property="IsManipulationEnabled" Value="True"/>
                <Setter Property="IsDynamicItemsSource" Value="False"/>
                <Setter Property="IsGroupDropAreaExpanded" Value="True"/>
                <Setter Property="AutoExpandGroups" Value="False"/>
                <Setter Property="AutoGenerateColumns" Value="False"/>
                <Setter Property="AutoGenerateColumnsForCustomType" Value="False"/>
                <Setter Property="AutoGenerateColumnsModeForCustomType" Value="Both"/>
                <Setter Property="AutoGenerateColumnsMode" Value="None"/>
                <Setter Property="AutoGenerateRelations" Value="False"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                <Setter Property="ScrollViewer.PanningRatio" Value="1"/>
                <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
                <!--<Setter Property="AllowCollectionView" Value="False"/>-->
                <Setter Property="AllowDeleting" Value="False"/>
                <Setter Property="AllowDraggingColumns" Value="False"/>
                <Setter Property="AllowDraggingRows" Value="False"/>
                <Setter Property="AllowDrop" Value="False"/>
                <Setter Property="AllowEditing" Value="False"/>
                <Setter Property="AllowFiltering" Value="False"/>
                <Setter Property="AllowFrozenGroupHeaders" Value="False"/>
                <Setter Property="AllowGrouping" Value="False"/>
                <Setter Property="AllowResizingColumns" Value="False"/>
                <Setter Property="AllowResizingHiddenColumns" Value="False"/>
                <Setter Property="AllowRowHoverHighlighting" Value="False"/>
                <Setter Property="AllowSelectionOnPointerPressed" Value="False"/>
                <Setter Property="AllowSorting" Value="False"/>
                <Setter Property="AllowTriStateSorting" Value="False"/>
                <Setter Property="AddNewRowPosition" Value="None"/>
                <Setter Property="AddNewRowText" Value="{DynamicResource Theme_DataGrid_Add}"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="HeaderStyle" Value="{StaticResource SfDataGridHeaderCellSty}"/>
                <Setter Property="AlternatingRowStyle" Value="{StaticResource SfDataGridAlternatingRowSty}"/>
                <Setter Property="RowStyle" Value="{StaticResource SfDataGridRowSty}"/>
                <!--<Setter Property="RowStyleSelector" Value="{x:Null}"/>-->
                <Setter Property="CellStyle" Value="{StaticResource SfDataGridCellSty}"/>
                <Setter Property="DetailsViewDataGridStyle" Value="{StaticResource DetailsViewDataGridSty}"/>
                <Setter Property="DetailsViewPadding" Value="0"/>
                <Setter Property="ReuseRowsOnItemssourceChange" Value="True"/>
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type sfdatagrid:SfDataGrid}">
                            <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="Busy">
                                            <Storyboard>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsBusyIndicatorShowing" Storyboard.TargetName="PART_BusyDecorator">
                                                    <DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border Background="White" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                    <ScrollViewer x:Name="PART_ScrollViewer" Background="{TemplateBinding Background}" BorderThickness="0" BorderBrush="Transparent"
                                          IsTabStop="{TemplateBinding IsTabStop}" CanContentScroll="True" 
                                          FlowDirection="{TemplateBinding FlowDirection}" 
                                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" 
                                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                          IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                          PanningMode="{TemplateBinding ScrollViewer.PanningMode}" 
                                          PanningRatio="{TemplateBinding ScrollViewer.PanningRatio}"
                                          Template="{StaticResource SfDataGridScrollViewerTemplate}"
                                          Padding="0" Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                        <sfdatagrid:VisualContainer x:Name="PART_VisualContainer" AllowFixedGroupCaptions="False" Background="Transparent" 
                                                            CanHorizontallyScroll="True" ColumnCount="0" CanVerticallyScroll="True" FrozenRows="0" 
                                                            FrozenColumns="0" FooterColumns="0" FooterRows="0" HorizontalPixelScroll="True" 
                                                            HorizontalPadding="0" RowsGenerator="{x:Null}" RowCount="0" ScrollOwner="{x:Null}"
                                                            ScrollableOwner="{x:Null}" VerticalPixelScroll="True" VerticalPadding="0">
                                            <sfdatagrid:VisualContainer.RowHeightManager>
                                                <sfdatagrid:RowHeightManager/>
                                            </sfdatagrid:VisualContainer.RowHeightManager>
                                            <Line x:Name="PART_HorizontalLine" Stroke="Transparent"/>
                                            <Line x:Name="PART_VerticalLine" Stroke="Transparent"/>
                                        </sfdatagrid:VisualContainer>
                                    </ScrollViewer>
                                </Border>
                                <sfdatagrid:BusyDecorator x:Name="PART_BusyDecorator" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible">
                                    <Setter Property="Background" Value="{StaticResource CommonWhiteBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="12"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <!--进样-->
            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="8"/>
                    <RowDefinition Height="32"/>
                    <RowDefinition Height="8"/>
                    <RowDefinition Height="698"/>
                    <RowDefinition Height="48"/>
                    <RowDefinition Height="32"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="1" Style="{StaticResource UCtlChildTitleTextBlockSty}"
                           Text="{DynamicResource AutoSampler_Main_SampleList}"/>
                <!--<Button Grid.Row="1" x:Name="Btn_AddNew" Content="ADD"  Width="80" Margin="80 0 0 0"
                                                       Click="AddElementCommand" Style="{StaticResource ButtonAddNewRowSty}"/>-->
                <sfdatagrid:SfDataGrid Grid.Row="3" FrozenColumnCount="3" x:Name="Sample_DataGrid"
                                       ItemsSource="{Binding SampleInfos,Source={x:Static global:GlobalInfo.Instance}}"                                
                                       ColumnSizer="AutoLastColumnFill" SelectionMode="Extended" SelectionUnit="Row" 
                                       SelectedIndex="{Binding SelectedSampleIndex}"
                                       SelectedItems="{Binding SelectedSampleInfo,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                       IsEnabled="{Binding Control_ParentView.IsUseAutoSampler}" 
                                       AddNewRowPosition="Bottom" AllowSorting="True">
                    <!--KeyUp="PreviewKeyUpCommand"-->
                    <sfdatagrid:SfDataGrid.Resources>
                        <Style TargetType="{x:Type sfdatagrid:AddNewRowControl}" BasedOn="{StaticResource AddNewRowControlSty}">
                                <Setter Property="Padding" Value="44 2 0 0"/>
                                <!--<Setter Property="Background" Value="{Binding Path=ItemsSource.Count,Converter={StaticResource CountToDGAddRowBackConverter},RelativeSource={RelativeSource AncestorType={x:Type sfdatagrid:SfDataGrid}}}"/>-->
                                <Setter Property="Template">
                                    <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type sfdatagrid:AddNewRowControl}">
                                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                <Button x:Name="Btn_AddNew" Content="{TemplateBinding AddNewRowText}" Padding="0" Margin="50,0,0,0"
                                                        Click="AddElementCommand" sfdatagrid:FocusManagerHelper.FocusedElement="True" 
                                                        Style="{StaticResource ButtonAddNewRowSty}"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <ContextMenu x:Key="DataGridRowContextMenuRadyTemplate" Style="{StaticResource ContextMenuSty}" MinWidth="120" >
                            <MenuItem Header="{DynamicResource MenuItem_Header_InsertRowBelow}" Click ="InsertRowCommand" Style="{StaticResource ContextMenuItemSty}"/>
                            <MenuItem Header="{DynamicResource AutoSampler_Run_AddSample}" Click ="AddSampleCommand" Style="{StaticResource ContextMenuItemSty}"/>
                            <MenuItem Header="{DynamicResource MenuItem_Header_Copy}" Click ="CopyCommand" Style="{StaticResource ContextMenuItemSty}"/>
                            <MenuItem Header="{DynamicResource MenuItem_Header_PasteHere}" Click="PasteHereCommand" Style="{StaticResource ContextMenuItemSty}"/>
                            <MenuItem Header="{DynamicResource MenuItem_Header_Delete}" Click="DeleteCommand" Style="{StaticResource ContextMenuItemSty}"/>
                            <MenuItem Header="{DynamicResource AutoSampler_Run_Skip}" Click="SkipCommand" Style="{StaticResource ContextMenuItemSty}"/>
                            <MenuItem Header="{DynamicResource AutoSampler_Run_StartThisRow}" Click="StartThisRowCommand" IsEnabled="{Binding Control_ParentView.IsCanRunning}"                              
                                      Visibility="{Binding IsHimassConnState,Source={x:Static global:GlobalInfo.Instance}}"
                                      Style="{StaticResource ContextMenuItemSty}"/>
                            <MenuItem Header="{DynamicResource AutoSampler_Run_BringToTop}" Click ="BringToTopCommand" Style="{StaticResource ContextMenuItemSty}"/>
                        </ContextMenu>
                        <ContextMenu x:Key="DataGridRowContextMenuCompleteTemplate" Style="{StaticResource ContextMenuSty}" MinWidth="120">
                            <MenuItem Header="{DynamicResource MenuItem_Header_Copy}" Click="CopyCommand" Style="{StaticResource ContextMenuItemSty}"/>
                            <MenuItem Header="{DynamicResource MenuItem_Header_InsertRowBelow}" Click="InsertRowCommand" Style="{StaticResource ContextMenuItemSty}"/>
                            <MenuItem Header="{DynamicResource AutoSampler_Run_AddSample}" Click="AddSampleCommand" Style="{StaticResource ContextMenuItemSty}"/>
                        </ContextMenu>
                        <ContextMenu x:Key="DataGridRowContextMenuRunningTemplate" Style="{StaticResource ContextMenuSty}" MinWidth="120">
                            <MenuItem Header="{DynamicResource AutoSampler_Run_AddSample}" Click="AddSampleCommand" Style="{StaticResource ContextMenuItemSty}"/>
                            <MenuItem Header="{DynamicResource MenuItem_Header_Copy}" Click="CopyCommand" Style="{StaticResource ContextMenuItemSty}"/>
                        </ContextMenu>
                        <ContextMenu x:Key="DataGridRowContextMenuErrorTemplate" Style="{StaticResource ContextMenuSty}" MinWidth="120">
                            <MenuItem Header="{DynamicResource AutoSampler_Run_AddSample}" Click="AddSampleCommand" Style="{StaticResource ContextMenuItemSty}"/>
                        </ContextMenu>
                        <ContextMenu x:Key="DataGridRowContextMenuFreeTemplate" Style="{StaticResource ContextMenuSty}" MinWidth="120">
                            <MenuItem Header="{DynamicResource AutoSampler_Run_AddSample}" Click="AddSampleCommand" Style="{StaticResource ContextMenuItemSty}"/>
                            <MenuItem Header="{DynamicResource MenuItem_Header_PasteHere}" Click="PasteHereCommand" Style="{StaticResource ContextMenuItemSty}"/>
                        </ContextMenu>
                    </sfdatagrid:SfDataGrid.Resources>
                    <sfdatagrid:SfDataGrid.RowStyle>
                        <Style TargetType="{x:Type sfdatagrid:VirtualizingCellsControl}" BasedOn="{StaticResource SfDataGridSelectionRowSty}">
                            <Setter Property="Tag" Value="{Binding DataContext,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ExpStatus}" Value="Ready">
                                    <Setter Property="ContextMenu" Value="{StaticResource DataGridRowContextMenuRadyTemplate}" />
                                    <Setter Property="RowSelectionBrush" Value="{DynamicResource ThemeBrush40}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ExpStatus}" Value="Complete">
                                    <Setter Property="ContextMenu" Value="{StaticResource DataGridRowContextMenuCompleteTemplate}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ExpStatus}" Value="Error">
                                    <Setter Property="ContextMenu" Value="{StaticResource DataGridRowContextMenuErrorTemplate}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ExpStatus}" Value="Free">
                                    <Setter Property="ContextMenu" Value="{StaticResource DataGridRowContextMenuFreeTemplate}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ExpStatus}" Value="Running">
                                    <Setter Property="ContextMenu" Value="{StaticResource DataGridRowContextMenuRunningTemplate}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ExpStatus}" Value="Skip">
                                    <Setter Property="ContextMenu" Value="{StaticResource DataGridRowContextMenuCompleteTemplate}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </sfdatagrid:SfDataGrid.RowStyle>
                    <sfdatagrid:SfDataGrid.AlternatingRowStyle>
                        <Style TargetType="{x:Type sfdatagrid:VirtualizingCellsControl}" BasedOn="{StaticResource SfDataGridAlternatingRowSty}">
                            <Setter Property="Tag" Value="{Binding DataContext,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ExpStatus}" Value="Ready">
                                    <Setter Property="ContextMenu" Value="{StaticResource DataGridRowContextMenuRadyTemplate}"/>
                                    <Setter Property="RowSelectionBrush" Value="{DynamicResource ThemeBrush40}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ExpStatus}" Value="Complete">
                                    <Setter Property="ContextMenu" Value="{StaticResource DataGridRowContextMenuCompleteTemplate}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ExpStatus}" Value="Error">
                                    <Setter Property="ContextMenu" Value="{StaticResource DataGridRowContextMenuErrorTemplate}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ExpStatus}" Value="Free">
                                    <Setter Property="ContextMenu" Value="{StaticResource DataGridRowContextMenuFreeTemplate}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ExpStatus}" Value="Running">
                                    <Setter Property="ContextMenu" Value="{StaticResource DataGridRowContextMenuRunningTemplate}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ExpStatus}" Value="Skip">
                                    <Setter Property="ContextMenu" Value="{StaticResource DataGridRowContextMenuCompleteTemplate}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </sfdatagrid:SfDataGrid.AlternatingRowStyle>
                    <sfdatagrid:SfDataGrid.Style>
                        <Style TargetType="{x:Type sfdatagrid:SfDataGrid}" BasedOn="{StaticResource SfDataGridSty}">
                            <Setter Property="Width" Value="884"/>
                        </Style>
                    </sfdatagrid:SfDataGrid.Style>
                    <sfdatagrid:SfDataGrid.Columns>
                        <sfdatagrid:GridTemplateColumn Width="40" HeaderStyle="{StaticResource SfDataGridHeaderCellBor0Sty}">
                            <sfdatagrid:GridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <CheckBox sfdatagrid:FocusManagerHelper.FocusedElement="True" Click="SamplingSelectedAllCommand" 
                                              IsChecked="{Binding DataContext.IsSamplingSelectedAll,RelativeSource={RelativeSource AncestorType={x:Type UserControl},Mode=FindAncestor},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                              Style="{StaticResource CheckBoxSty}" HorizontalAlignment="Center"/>
                                </DataTemplate>
                            </sfdatagrid:GridTemplateColumn.HeaderTemplate>
                            <sfdatagrid:GridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <CheckBox IsEnabled="{Binding ExpStatus,Mode=TwoWay,Converter={StaticResource CompareToTrueConverter},ConverterParameter=Ready}"
                                                  IsChecked="{Binding IsChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                                  Click="SampleSelectCommand" sfdatagrid:FocusManagerHelper.FocusedElement="True"
                                                  Style="{StaticResource CheckBoxSty}" HorizontalAlignment="Center">
                                            <CheckBox.Visibility>
                                                <MultiBinding Converter="{StaticResource MultiBoolOrToObjectConverter}">
                                                    <MultiBinding.ConverterParameter>
                                                        <x:Array Type="{x:Type model:Exp_Status}">
                                                            <model:Exp_Status>Ready</model:Exp_Status>
                                                            <model:Exp_Status>Standby</model:Exp_Status>
                                                        </x:Array>
                                                    </MultiBinding.ConverterParameter>
                                                    <Binding Path="ExpStatus" Mode="OneWay"/>
                                                    <Binding Path="ExpStatus" Mode="OneWay"/>
                                                </MultiBinding>
                                            </CheckBox.Visibility>
                                        </CheckBox>
                                        <Viewbox Width="24" Height="24">
                                            <Viewbox.Visibility>
                                                <MultiBinding Converter="{StaticResource MultiBoolOrToObjectConverter}">
                                                    <MultiBinding.ConverterParameter>
                                                        <x:Array Type="{x:Type model:Exp_Status}">
                                                            <model:Exp_Status>Running</model:Exp_Status>
                                                            <model:Exp_Status>Complete</model:Exp_Status>
                                                            <model:Exp_Status>Skip</model:Exp_Status>
                                                            <model:Exp_Status>Stop</model:Exp_Status>
                                                            <model:Exp_Status>Error</model:Exp_Status>
                                                        </x:Array>
                                                    </MultiBinding.ConverterParameter>
                                                    <Binding Path="ExpStatus" Mode="OneWay"/>
                                                    <Binding Path="ExpStatus" Mode="OneWay"/>
                                                    <Binding Path="ExpStatus" Mode="OneWay"/>
                                                    <Binding Path="ExpStatus" Mode="OneWay"/>
                                                    <Binding Path="ExpStatus" Mode="OneWay"/>
                                                </MultiBinding>
                                            </Viewbox.Visibility>
                                            <Image Width="48" Height="48" Stretch="None">
                                                <Image.Style>
                                                    <Style TargetType="{x:Type Image}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ExpStatus,Mode=OneWay}" Value="Running">
                                                                <Setter Property="Source" Value="/LabTech.UITheme;component/Images/data_status/running.png"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding ExpStatus,Mode=OneWay}" Value="Complete">
                                                                <Setter Property="Source" Value="/LabTech.UITheme;component/Images/data_status/complete.png"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding ExpStatus,Mode=OneWay}" Value="Skip">
                                                                <Setter Property="Source" Value="/LabTech.UITheme;component/Images/data_status/jumped.png"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding ExpStatus,Mode=OneWay}" Value="Stop">
                                                                <Setter Property="Source" Value="/LabTech.UITheme;component/Images/data_status/stopped.png"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding ExpStatus,Mode=OneWay}" Value="Error">
                                                                <Setter Property="Source" Value="/LabTech.UITheme;component/Images/data_status/error.png"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </Viewbox>
                                    </Grid>
                                </DataTemplate>
                            </sfdatagrid:GridTemplateColumn.CellTemplate>
                        </sfdatagrid:GridTemplateColumn>
                        <sfdatagrid:GridTemplateColumn Width="40" HeaderStyle="{StaticResource SfDataGridHeaderCellBor0Sty}">
                            <sfdatagrid:GridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{DynamicResource AutoSampler_Run_No}" Style="{StaticResource DGHeaderTextBlockSty}"/>
                                </DataTemplate>
                            </sfdatagrid:GridTemplateColumn.HeaderTemplate>
                            <sfdatagrid:GridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding SampleNum,Mode=OneWay}" Style="{StaticResource DGCellTextBlockFore60Sty}"/>
                                </DataTemplate>
                            </sfdatagrid:GridTemplateColumn.CellTemplate>
                        </sfdatagrid:GridTemplateColumn>
                        <sfdatagrid:GridTemplateColumn MinimumWidth="210">
                            <sfdatagrid:GridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{DynamicResource DataGrid_Header_SampleID}" Style="{StaticResource DGHeaderTextBlockSty}"/>
                                </DataTemplate>
                            </sfdatagrid:GridTemplateColumn.HeaderTemplate>
                            <sfdatagrid:GridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding SampleName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                             sfdatagrid:FocusManagerHelper.FocusedElement="True" LostFocus="SampleNameLostFocus"
                                             Tag="{Binding DataContext,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"                                              
                                             Style="{StaticResource DGCellTextBoxBor0Sty}" BorderBrush="Transparent">
                                        <TextBox.IsEnabled>
                                            <MultiBinding Converter="{StaticResource MultiBoolOrToObjectConverter}">
                                                <MultiBinding.ConverterParameter>
                                                    <x:Array Type="{x:Type model:Exp_Status}">
                                                        <model:Exp_Status>Ready</model:Exp_Status>
                                                        <model:Exp_Status>Free</model:Exp_Status>
                                                    </x:Array>
                                                </MultiBinding.ConverterParameter>
                                                <Binding Path="ExpStatus" Mode="OneWay"/>
                                                <Binding Path="ExpStatus" Mode="OneWay"/>
                                            </MultiBinding>
                                        </TextBox.IsEnabled>
                                        <TextBox.ContextMenu>
                                            <ContextMenu Visibility="{Binding PlacementTarget.DataContext.ExpStatus,ConverterParameter='Ready',RelativeSource={RelativeSource Mode=Self},Converter={StaticResource CompareToVisibilityConverter}}" 
                                                         DataContext="{Binding PlacementTarget.Tag,RelativeSource={RelativeSource Mode=Self}}"
                                                         Style="{StaticResource ContextMenuSty}">
                                                <MenuItem Header="{DynamicResource MenuItem_Header_FillDown}" Style="{StaticResource ContextMenuItemSty}"
                                                          Click="SampleNameFillDownCommand"/>
                                                <MenuItem Header="{DynamicResource MenuItem_Header_FillIncrement}" Style="{StaticResource ContextMenuItemSty}"
                                                          Click="SampleNameFillIncrementCommand"/>
                                            </ContextMenu>
                                        </TextBox.ContextMenu>
                                    </TextBox>
                                </DataTemplate>
                            </sfdatagrid:GridTemplateColumn.CellTemplate>
                        </sfdatagrid:GridTemplateColumn>
                        <sfdatagrid:GridTemplateColumn  MinimumWidth="100">
                            <sfdatagrid:GridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{DynamicResource AutoSampler_Run_SampleLocation1}"/>
                                </DataTemplate>
                            </sfdatagrid:GridTemplateColumn.HeaderTemplate>
                            <sfdatagrid:GridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ltCtl:CustomNumericBox  ShortIntValue="{Binding SampleLoc,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                                sfdatagrid:FocusManagerHelper.FocusedElement="True" IsUseShortInt="True" MinValue="1" 
                                                MaxValue="{Binding TraySTD2Infos.TrayEndNumber,Source={x:Static global:GlobalInfo.Instance}}"
                                                            Tag="{Binding DataContext,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                                            LostFocus="SampleLocationLostFocus" Style="{StaticResource DGCellCustomNumericBoxBor0Sty}">
                                        <TextBox.IsEnabled>
                                            <MultiBinding Converter="{StaticResource MultiBoolOrToObjectConverter}">
                                                <MultiBinding.ConverterParameter>
                                                    <x:Array Type="{x:Type model:Exp_Status}">
                                                        <model:Exp_Status>Ready</model:Exp_Status>
                                                        <model:Exp_Status>Free</model:Exp_Status>
                                                    </x:Array>
                                                </MultiBinding.ConverterParameter>
                                                <Binding Path="ExpStatus" Mode="OneWay"/>
                                                <Binding Path="ExpStatus" Mode="OneWay"/>
                                            </MultiBinding>
                                        </TextBox.IsEnabled>
                                        <TextBox.ContextMenu>
                                            <ContextMenu Visibility="{Binding PlacementTarget.DataContext.ExpStatus,ConverterParameter='Ready',RelativeSource={RelativeSource Mode=Self},Converter={StaticResource CompareToVisibilityConverter}}" 
                                                         DataContext="{Binding PlacementTarget.Tag,RelativeSource={RelativeSource Mode=Self}}" 
                                                         Style="{StaticResource ContextMenuSty}">
                                                <MenuItem Header="{DynamicResource MenuItem_Header_FillDown}" Click="SampleLocationFillDownCommand" Style="{StaticResource ContextMenuItemSty}"/>
                                                <MenuItem Header="{DynamicResource MenuItem_Header_FillIncrement}" Click="SampleLocationFillIncrementCommand" Style="{StaticResource ContextMenuItemSty}"/>
                                            </ContextMenu>
                                        </TextBox.ContextMenu>
                                    </ltCtl:CustomNumericBox>
                                </DataTemplate>
                            </sfdatagrid:GridTemplateColumn.CellTemplate>
                        </sfdatagrid:GridTemplateColumn>
                        <sfdatagrid:GridTemplateColumn MinimumWidth="150" IsHidden="{Binding IsHimassConnState,Converter={StaticResource CompareToFalseConverter},ConverterParameter=True,Source={x:Static global:GlobalInfo.Instance}}">
                            <sfdatagrid:GridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{DynamicResource AutoSampler_Run_AnalysisType}" Style="{StaticResource DGHeaderTextBlockSty}"/>
                                </DataTemplate>
                            </sfdatagrid:GridTemplateColumn.HeaderTemplate>
                            <sfdatagrid:GridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ComboBox ItemsSource="{Binding DataContext.AnanlysisTypeList,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                              SelectedValuePath="Value" SelectedValue="{Binding MethodType,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                              SelectionChanged= "MethodTypeChangedCommand" 
                                              Visibility="{Binding ExpStatus,Mode=OneWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource CompareToCollapsedConverter},ConverterParameter=Free}"
                                              sfdatagrid:FocusManagerHelper.FocusedElement="True" >
                                        <!--Style="{StaticResource DGCellComboBoxSty}"-->
                                        <!--<ComboBox.IsEnabled>
                                            <MultiBinding Converter="{StaticResource MultiBoolOrToObjectConverter}">
                                                <MultiBinding.ConverterParameter>
                                                    <x:Array Type="{x:Type model:Exp_Status}">
                                                        <model:Exp_Status>Ready</model:Exp_Status>
                                                        <model:Exp_Status>Free</model:Exp_Status>
                                                    </x:Array>
                                                </MultiBinding.ConverterParameter>
                                                <Binding Path="ExpStatus" Mode="OneWay"/>
                                                <Binding Path="ExpStatus" Mode="OneWay"/>
                                            </MultiBinding>
                                        </ComboBox.IsEnabled>-->
                                        <ComboBox.Style>
                                            <Style TargetType="ComboBox" BasedOn="{StaticResource DGCellComboBoxSty}">
                                                <Setter Property="IsEnabled" Value="False"/>
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding ExpStatus}"  Value="Ready"/>
                                                            <Condition Binding="{Binding DataContext.Control_ParentView.IsMedicalSoft,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" Value="false"/>
                                                       </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="IsEnabled" Value="True"/>
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding ExpStatus}"  Value="Free"/>
                                                            <Condition Binding="{Binding DataContext.Control_ParentView.IsMedicalSoft,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" Value="false"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="IsEnabled" Value="True"/>
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ComboBox.Style>
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock>
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DGCellTextBlockMargin0Sty}">
                                                            <Setter Property="Text" Value="{Binding DisplayName}"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Value}" Value="Quantitative">
                                                                    <Setter Property="Text" Value="{DynamicResource AutoSampler_AnaType_Quantitative}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Value}" Value="SemiQuantative">
                                                                    <Setter Property="Text" Value="{DynamicResource AutoSampler_AnaType_SemiQuantative}"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                </DataTemplate>
                            </sfdatagrid:GridTemplateColumn.CellTemplate>
                        </sfdatagrid:GridTemplateColumn>
                        <sfdatagrid:GridTemplateColumn>
                            <sfdatagrid:GridTemplateColumn.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{DynamicResource AutoSampler_Run_OverWash}"/>
                                </DataTemplate>
                            </sfdatagrid:GridTemplateColumn.HeaderTemplate>
                            <sfdatagrid:GridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ltCtl:CustomNumericBox IsNullValue="True" IsUseLongInt="True" LongIntValue="{Binding Overwash,Mode=TwoWay,UpdateSourceTrigger=LostFocus}" 
                                                            MinValue="0" MaxValue="10000" DecimalPrecision="0" MaxLength="4" sfdatagrid:FocusManagerHelper.FocusedElement="True"                             
                                                            Tag="{Binding DataContext,RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                                            LostFocus="OverWashLostFocus" Style="{StaticResource DGCellCustomNumericBoxBor0Sty}" BorderBrush="Transparent">
                                        <ltCtl:CustomNumericBox.IsEnabled>
                                            <MultiBinding Converter="{StaticResource MultiBoolOrToObjectConverter}">
                                                <MultiBinding.ConverterParameter>
                                                    <x:Array Type="{x:Type model:Exp_Status}">
                                                        <model:Exp_Status>Ready</model:Exp_Status>
                                                        <model:Exp_Status>Free</model:Exp_Status>
                                                    </x:Array>
                                                </MultiBinding.ConverterParameter>
                                                <Binding Path="ExpStatus" Mode="OneWay"/>
                                                <Binding Path="ExpStatus" Mode="OneWay"/>
                                            </MultiBinding>
                                        </ltCtl:CustomNumericBox.IsEnabled>
                                        <ltCtl:CustomNumericBox.ContextMenu>
                                            <ContextMenu Visibility="{Binding PlacementTarget.DataContext.ExpStatus,ConverterParameter='Ready',RelativeSource={RelativeSource Mode=Self},Converter={StaticResource CompareToVisibilityConverter}}" 
                                                         DataContext="{Binding PlacementTarget.Tag,RelativeSource={RelativeSource Mode=Self}}"
                                                         Style="{StaticResource ContextMenuSty}">
                                                <MenuItem Header="{DynamicResource MenuItem_Header_FillDown}" Click="OverWashFillDownCommand" Style="{StaticResource ContextMenuItemSty}"/>
                                                <MenuItem Header="{DynamicResource MenuItem_Header_FillIncrement}" Click="OverWashFillIncrementCommand" Style="{StaticResource ContextMenuItemSty}"/>
                                            </ContextMenu>
                                        </ltCtl:CustomNumericBox.ContextMenu>
                                    </ltCtl:CustomNumericBox>
                                </DataTemplate>
                            </sfdatagrid:GridTemplateColumn.CellTemplate>
                        </sfdatagrid:GridTemplateColumn>
                    </sfdatagrid:SfDataGrid.Columns>
                </sfdatagrid:SfDataGrid>

                <Button Grid.Row="5" Content="{DynamicResource AutoSampler_Run_ToAnalyze}" Click="GoToAnalyze"
                        Visibility="{Binding IsHimassConnState,Source={x:Static global:GlobalInfo.Instance}, ConverterParameter=False,Converter={StaticResource CompareToCollapsedConverter}}"
                        Style="{StaticResource ButtonAccentSty}" HorizontalAlignment="Center" Width="144"/>

                <Grid Grid.Row="5" Visibility="{Binding IsHimassConnState,Source={x:Static global:GlobalInfo.Instance}, ConverterParameter=True,Converter={StaticResource CompareToCollapsedConverter}}"
                      HorizontalAlignment="Center">
                    <Button Content="{DynamicResource ButtonContent_Run}" Click="TaskRunningCommand"
                            Visibility="{Binding ExpStatus,Converter={StaticResource CompareToVisibilityConverter},ConverterParameter=Free}"
                            Style="{StaticResource ButtonAccentSty}" Width="144"/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <!--Visibility="{Binding ExpStatus,Converter={StaticResource CompareToVisibilityConverter},ConverterParameter=Pause}"-->
                        <Button Content="{DynamicResource ButtonContent_Continue}" Click="ContinueCommand" 
                                IsEnabled="{Binding IsCanContinue}" Style="{StaticResource ButtonAccentSty}" Width="144">
                            <Button.Visibility>
                                <MultiBinding Converter="{StaticResource MultiBoolOrToObjectConverter}">
                                    <MultiBinding.ConverterParameter>
                                        <x:Array Type="{x:Type model:Exp_Status}">
                                            <model:Exp_Status>Pause</model:Exp_Status>
                                            <model:Exp_Status>PauseCurrentSample</model:Exp_Status>
                                        </x:Array>
                                    </MultiBinding.ConverterParameter>
                                    <Binding Path="ExpStatus" Mode="OneWay"/>
                                    <Binding Path="ExpStatus" Mode="OneWay"/>
                                </MultiBinding>
                            </Button.Visibility>
                        </Button>

                        <ltCtl:CustomPopupBox PlacementMode="BottomAndAlignLeftEdges" ToggleStyle="{StaticResource ToggleButtonPopupBoxNoStateSty}"    
                                              ToggleContent="{DynamicResource ButtonContent_Pause}"
                                              Visibility="{Binding ExpStatus,Converter={StaticResource CompareToVisibilityConverter},ConverterParameter=Running}"
                                              Style="{StaticResource CustomPopupBoxSty}" Width="144">
                            <StackPanel MinWidth="180">
                                <Button Content="{DynamicResource AutoSampler_Run_PauseImmediately}" Click="PauseImmediatelyCommand"
                                        Style="{StaticResource ButtonPopupBoxSty}"/>
                                <Button Content="{DynamicResource AutoSampler_Run_PauseAfterCurrentSam}" Click="PauseAfterCurrentSamCommand"
                                        Style="{StaticResource ButtonPopupBoxSty}"/>
                            </StackPanel>
                        </ltCtl:CustomPopupBox>
                        <!--Visibility="{Binding ExpStatus,Converter={StaticResource CompareToVisibilityConverter},ConverterParameter=Running}"-->
                        <ltCtl:CustomPopupBox Grid.Column="1" PlacementMode="BottomAndAlignLeftEdges" Style="{StaticResource CustomPopupBoxSty}"
                                              ToggleStyle="{StaticResource ToggleButtonPopupBoxNoStateSty}" Width="60" Margin="12 0 0 0">
                            <ltCtl:CustomPopupBox.Visibility>
                                <MultiBinding Converter="{StaticResource MultiBoolOrToObjectConverter}">
                                    <MultiBinding.ConverterParameter>
                                        <x:Array Type="{x:Type model:Exp_Status}">
                                            <model:Exp_Status>Running</model:Exp_Status>
                                            <model:Exp_Status>Pause</model:Exp_Status>
                                        </x:Array>
                                    </MultiBinding.ConverterParameter>
                                    <Binding Path="ExpStatus" Mode="OneWay"/>
                                    <Binding Path="ExpStatus" Mode="OneWay"/>
                                </MultiBinding>
                            </ltCtl:CustomPopupBox.Visibility>
                            <ltCtl:CustomPopupBox.ToggleContent>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="24"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{DynamicResource ButtonContent_Stop}"/>
                                    <Viewbox Grid.Column="1">
                                        <Image Source="/LabTech.UITheme;component/Images/arrow/down.png" Style="{StaticResource Image48Sty}"/>
                                    </Viewbox>
                                </Grid>
                            </ltCtl:CustomPopupBox.ToggleContent>
                            <StackPanel MinWidth="180">
                                <Button Content="{DynamicResource AutoSampler_Run_StopImmediately}"  
                                        Style="{StaticResource ButtonPopupBoxSty}"
                                        Click="StopImmediatelyCommand"/>
                                <!--<Button  Content="{DynamicResource AutoSampler_Run_GoToRinseImmediatelyStop}" 
                                         Style="{StaticResource ButtonPopupBoxSty}"
                                         cal:Message.Attach="[Event Click]=[Action AfterWashStopImmediatelyCommand]"/>-->
                                <Button Content="{DynamicResource AutoSampler_Run_StopAfterCurrentSam}" 
                                        Style="{StaticResource ButtonPopupBoxSty}"
                                        Click="StopAfterCurrentSamCommand"/>
                            </StackPanel>
                        </ltCtl:CustomPopupBox>
                    </Grid>
                    <Button Content="{DynamicResource ButtonContent_BackToReady}" Click="BackToReadyCommand"
                            IsEnabled="{Binding IsCanRunning,Source={x:Static global:GlobalInfo.Instance}}"
                            Visibility="{Binding ExpStatus,Converter={StaticResource CompareToVisibilityConverter},ConverterParameter=Complete}"
                            Style="{StaticResource ButtonAccentSty}" Width="144"/>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</UserControl>